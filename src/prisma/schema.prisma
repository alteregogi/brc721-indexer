generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model CollectionManifest {
  blockHeight         Int
  transactionIndex    Int
  raw                 Json
  maxSupply           Int?
  maxPerAddress       Int?
  maxBlockHeight      Int?
  position            Int?
  version             String
  name                String
  symbol              String
  paymentAddress      String
  signerPublicKey     String
  inscriberAddress    String
  reindexing          Boolean               @default(false)
  id                  String                @id @unique
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now()) @updatedAt
  RevealManifest      RevealManifest[]
  InscriptionManifest InscriptionManifest[]
}

model InscriptionManifest {
  blockHeight         Int
  transactionIndex    Int
  position            Int?
  price               Int?
  raw                 Json
  verificationErrors  Json?
  inscriberAddress    String
  version             String
  collectionId        String
  initialOwnerAddress String?
  id                  String             @id @unique
  valid               Boolean            @default(true)
  metadata            Json?
  media               Json?
  revealWeight        Int                @default(0)
  updatedAt           DateTime           @default(now()) @updatedAt
  reindexing          Boolean            @default(false)
  createdAt           DateTime           @default(now())
  satPointVout        Int?
  satPointOffset      Int?
  ownerAddress        String?
  satPointTxId        String?
  CollectionManifest  CollectionManifest @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  SatPoint            SatPoint[]

  @@index([collectionId])
}

model RevealManifest {
  blockHeight        Int
  transactionIndex   Int
  weight             Int
  raw                Json
  verificationErrors Json?
  inscriberAddress   String
  metadataURL        String
  version            String
  collectionId       String
  id                 String             @id @unique
  valid              Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @default(now()) @updatedAt
  reindexing         Boolean            @default(false)
  CollectionManifest CollectionManifest @relation(fields: [collectionId], references: [id], onDelete: Cascade)

  @@index([collectionId])
}

model State {
  id             String   @id @unique
  run            Int
  hash           String
  height         Int
  fallbackHeight Int
  checksum       String
  updatedAt      DateTime @updatedAt
}

model SatPoint {
  id                    String               @id @default(cuid())
  vout                  Int?
  offset                Int?
  ownerAddress          String?
  blockHeight           Int?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @default(now()) @updatedAt
  inscriptionManifestId String
  txId                  String?
  InscriptionManifest   InscriptionManifest? @relation(fields: [inscriptionManifestId], references: [id])

  @@unique([txId, vout, offset, inscriptionManifestId])
  @@index([inscriptionManifestId])
}

model Checksum {
  checksum    String
  blockHash   String
  blockHeight Int      @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}
